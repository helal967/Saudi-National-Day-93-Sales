# -*- coding: utf-8 -*-
"""SaudiNationalDay2023DataAnalysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LloVNExEgP_zzOJXtErH-wIhJco_qQOW

## Importing Libraries
"""

import pandas as pd
import plotly.express as px

"""## Reading Data File"""

# قراءة ملف البيانات
df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Analysis Projects/DataSets/saudi_national_day_93_sales_data.csv')

"""## Exploratory Data Analysis"""

df.shape

df.head(10)

df.tail(10)

df.info()

#فحص القيم الفارغة
pd.isnull(df).sum()

df.columns

# describe() method returns description of the data in the DataFrame (i.e. count, mean, std, etc)
df.describe()

# تحويل تنسيق التاريخ إلى datetime
df['تاريخ البيع'] = pd.to_datetime(df['تاريخ البيع'])

# حساب عدد المنتجات المباعة ضمن الصنف والمدينة
product_count = df.groupby(['إسم المنتج','صنف المنتج','المدينة']).size().reset_index(name='العدد')
product_count

# حساب عدد المنتجات المباعة ضمن صنف الملابس
Category_count = df.groupby('صنف المنتج').size().reset_index(name='العدد')
Category_count

# حساب عدد المنتجات المباعة ضمن صنف الملابس
Category_City_count = df.groupby(['صنف المنتج','المدينة']).size().reset_index(name='العدد')
Category_City_count

product_name_count = df.groupby(['إسم المنتج']).size().reset_index(name='العدد')
product_name_count

# حساب عدد المنتجات المباعة ضمن صنف الملابس
Category_Date_count = df.groupby(['صنف المنتج','تاريخ البيع','المدينة']).size().reset_index(name='العدد')
Category_Date_count

"""## Data Visualizations"""

# 1. استعراض نسبة المبيعات حسب المدن
fig1 = px.pie(df, values='السعر الإجمالي (رس)', names='المدينة', color='المدينة', title='نسبة المبيعات حسب المدن')
# عرض الرسم البياني
fig1.show()

# 2. مقارنة بين المدن لمعرفة أي المدن حققت أعلى مبيعاً
fig2 = px.bar(df.groupby('المدينة')['السعر الإجمالي (رس)'].sum().reset_index().sort_values('السعر الإجمالي (رس)', ascending=False),
              x='المدينة', y='السعر الإجمالي (رس)', color='المدينة', title='مقارنة المدن حسب أعلى المبيعات')
fig2.update_traces(texttemplate='%{y}', textposition='outside')
#fig2.update_layout(showlegend=False)
# عرض الرسم البياني
fig2.show()

#3. مقارنة المدن من حيث الصنف الأكثر مبيعاً
fig3 = px.histogram(df, x="صنف المنتج", y="السعر الإجمالي (رس)",
             color='المدينة', barmode='group',
             histfunc='sum',
             title='إجمالي مبيعات المنتجات حسب الأصناف وفق المدن')
fig3.update_traces(texttemplate='%{y}', textposition='outside')
fig3.show()

#4. مقارنة عدد الأصناف الأكثر مبيعاً
fig4 = px.bar(df.groupby('صنف المنتج').size().reset_index(name='العدد'),
              x='صنف المنتج', y='العدد',  color='صنف المنتج', title='إجمالي عدد المنتجات حسب الأصناف')
fig4.update_traces(texttemplate='%{y}', textposition='outside')
fig4.update_layout(showlegend=False)
fig4.show()

#5.  مقارنة عدد الأصناف المباعة حسب المدن باستخدام Histogram Chart
fig5 = px.histogram(Category_City_count, x="صنف المنتج", y="العدد",
             color='المدينة', barmode='group',
             histfunc='sum',
             title='إجمالي عدد الأصناف المباعة حسب المدن')
fig5.update_traces(texttemplate='%{y}', textposition='outside', )
fig5.show()

#6. مقارنة عدد الأصناف المباعة حسب المدن باستخدام Bar Chart
fig6 = px.bar(Category_City_count, x="صنف المنتج", y="العدد", color="المدينة", text="المدينة")
fig6.update_traces(texttemplate='%{y}', textfont_color='white', textposition='inside')
fig6.show()

#7. استخدام مخطط Sunburst لمعرفة نسبة توزيع الأصناف حسب المدن
fig7 = px.sunburst(
    Category_City_count,
    path=['صنف المنتج', 'المدينة'], values='العدد')
fig7.show()

# 8. التسلسل الزمني للمبيعات
fig8 = px.line(df.groupby('تاريخ البيع')['السعر الإجمالي (رس)'].sum().reset_index(),
               x='تاريخ البيع', y='السعر الإجمالي (رس)', title='التسلسل الزمني للمبيعات')
fig8.update_xaxes(title_text='تاريخ البيع')

# 9. التسلسل الزمني للمبيعات حسب المدن
fig9 = px.line(df.groupby(['تاريخ البيع','المدينة'])['السعر الإجمالي (رس)'].sum().reset_index(),
               x='تاريخ البيع', y='السعر الإجمالي (رس)', color='المدينة', markers=True, title='التسلسل الزمني للمبيعات حسب المدن')
fig9.update_xaxes(title_text='تاريخ البيع')
fig9.show()

# 10. إجمالي عدد المبيعات حسب التواريخ والأصناف وفق المدن
fig10 = px.bar(Category_Date_count,
               x='تاريخ البيع', y='العدد', color='صنف المنتج',facet_col="المدينة", title='إجمالي عدد المبيعات حسب التواريخ والأصناف وفق المدن')
fig10.update_traces(texttemplate='%{y}',textfont_size=12, textfont_color='white', textangle=0, textposition="inside", cliponaxis=False)
fig10.show()

# 11. مقارنة إجمالي السعر من حيث الأصناف
fig11 = px.bar(df.groupby('صنف المنتج')['السعر الإجمالي (رس)'].sum().reset_index().sort_values('السعر الإجمالي (رس)', ascending=False),
              x='صنف المنتج', y='السعر الإجمالي (رس)', color='صنف المنتج', title='إجمالي السعر حسب الأصناف')
fig11.update_traces(texttemplate='%{y}', textposition='outside')
fig11.update_layout(showlegend=False)
fig11.show()

#12. إجمالي عدد المنتجات المباعة في اليوم الوطني 93
fig12 = px.bar(product_name_count,
              x='العدد', y='إسم المنتج',  color='إسم المنتج', title='إجمالي عدد المنتجات المباعة في اليوم الوطني 93')
fig12.update_traces(texttemplate='%{x}', textposition='outside')
fig12.update_layout(showlegend=False)
fig12.show()

# 13. مقارنة الإيرادات لمعرفة أي مدينة حققت أعلى الإيرادات وفي أي صنف منتج
fig13 = px.bar(df.groupby(['المدينة', 'صنف المنتج'])['السعر الإجمالي (رس)'].sum().reset_index().sort_values('السعر الإجمالي (رس)', ascending=False),
              x='السعر الإجمالي (رس)', y='المدينة', color='صنف المنتج',
              title='أعلى الإيرادات حسب اسم المدينة وصنف المنتج')
fig13.update_traces(texttemplate='%{x}',textfont_color='white', textposition='inside')
fig13.show()

# 13. مقارنة الإيرادات لمعرفة أي مدينة حققت أعلى الإيرادات وفي أي صنف منتج
fig13 = px.bar(df.groupby(['المدينة', 'صنف المنتج'])['السعر الإجمالي (رس)'].sum().reset_index().sort_values('السعر الإجمالي (رس)', ascending=False),
              x='صنف المنتج', y='السعر الإجمالي (رس)', color='المدينة',
              title='أعلى الإيرادات حسب اسم المدينة وصنف المنتج')
fig13.update_traces(texttemplate='%{y}',textfont_color='white', textposition='inside')
fig13.show()

#14. إجمالي عدد المبيعات حسب المدن ونوع الصنف
fig14 = px.icicle(df, path=['المدينة', 'صنف المنتج', 'السعر الإجمالي (رس)'],
                values='السعر الإجمالي (رس)', color='المدينة', title='إجمالي عدد المبيعات حسب المدن ونوع الصنف',
                labels={'إجمالي المبيعات': 'السعر الإجمالي (رس)', 'المدينة': 'المدينة', 'صنف المنتج': 'صنف المنتج'})
fig14.show()

